{"version":3,"sources":["components/Footer.js","components/Scoreboard.js","components/Card.js","components/Header.js","App.js","index.js"],"names":["Footer","Scoreboard","props","className","score","bestScore","Card","alt","src","image","onClick","id","Header","App","useState","setScore","setBestScore","cardData","setCardData","randomImgOne","setRandomImgOne","randomImgTwo","setRandomImgTwo","idOne","setIdOne","idTwo","setIdTwo","cardArray","setCardArray","random","Math","floor","handleClick","event","randomOne","randomTwo","data","memes","url","includes","target","concat","fetch","then","response","json","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAYeA,MAVf,WACI,OACI,iCACI,yDCWGC,MAdf,SAAoBC,GAChB,OACI,sBAAKC,UAAU,aAAf,UACI,8BACI,gDAAoBD,EAAME,WAE9B,uBACA,8BACI,6CAAiBF,EAAMG,mBCKxBC,MAbf,SAAcJ,GACV,OACI,qBAAKC,UAAU,OAAf,SACI,qBACII,IAAI,GACJC,IAAMN,EAAMO,MACZC,QAAUR,EAAMQ,QAChBC,GAAKT,EAAMS,QCGZC,MAVf,WACI,OACI,iCACI,gDCmEGC,MAjEf,WAAgB,IAAD,EAEaC,mBAAS,GAFtB,mBAENV,EAFM,KAECW,EAFD,OAGqBD,mBAAS,GAH9B,mBAGNT,EAHM,KAGKW,EAHL,OAImBF,qBAJnB,mBAING,EAJM,KAIIC,EAJJ,OAK2BJ,mBAAS,oCALpC,mBAKNK,EALM,KAKQC,EALR,OAM2BN,mBAAS,oCANpC,mBAMNO,EANM,KAMQC,EANR,OAOaR,mBAAS,KAPtB,mBAONS,EAPM,KAOCC,EAPD,OAQaV,mBAAS,KARtB,mBAQNW,EARM,KAQCC,EARD,OASqBZ,mBAAS,IAT9B,mBASNa,EATM,KASKC,EATL,KAoBb,SAASC,IACP,OAAOC,KAAKC,MAAM,IAAAD,KAAKD,UAGzB,SAASG,EAAYC,GACnB,IAAMC,EAAYL,IACZM,EAAYN,IAClBT,EAAgBH,EAASmB,KAAKA,KAAKC,MAAMH,GAAWI,KACpDhB,EAAgBL,EAASmB,KAAKA,KAAKC,MAAMF,GAAWG,KACpDd,EAASU,GACTR,EAASS,GACTpB,EAASX,EAAQ,GACZuB,EAAUY,SAASN,EAAMO,OAAO7B,KAAOgB,IAAc,IAGxDC,EAAa,IACbZ,EAAaZ,GACbW,EAAS,IAJTa,EAAaD,EAAUc,OAAOR,EAAMO,OAAO7B,KAQ/C,OA9BAG,oBAAS,WACP4B,MAAM,oCAAqC,IAElCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAP,GACFlB,EAAY,CAACkB,cAExB,IAwBD,sBAAKjC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEC,MAAOA,EACPC,UAAWA,IAEb,sBAAKF,UAAU,iBAAf,UACE,cAAC,EAAD,CACEM,MAAQU,EACRT,QAAUsB,EACVrB,GAAKY,IAEP,cAAC,EAAD,CACEd,MAAQY,EACRX,QAAUsB,EACVrB,GAAKc,OAGT,cAAC,EAAD,QC9DNqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.7196640b.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction Footer() {\n    return (\n        <footer>\n            <h3>\n                Â© James Reed 2021\n            </h3>\n        </footer>\n    )\n}\n\nexport default Footer","import React from \"react\"\n\nfunction Scoreboard(props) {\n    return (\n        <div className=\"scoreboard\">\n            <div>\n                <p>Current Score: { props.score }</p>\n            </div>\n            <br/>\n            <div>\n                <p>Best Score: { props.bestScore }</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Scoreboard","import React from \"react\"\n\nfunction Card(props) {\n    return (\n        <div className=\"card\">\n            <img \n                alt=\"\" \n                src={ props.image }\n                onClick={ props.onClick }\n                id={ props.id }\n            />\n        </div>\n    )\n}\n\nexport default Card","import React from \"react\"\n\nfunction Header() {\n    return (\n        <header>\n            <h1>\n                Memory Card\n            </h1>\n        </header>\n    )\n}\n\nexport default Header","import './App.css';\nimport Footer from \"./components/Footer\"\nimport Scoreboard from \"./components/Scoreboard\"\nimport Card from \"./components/Card\"\nimport Header from \"./components/Header\"\nimport React, {useState} from 'react';\n\nfunction App() {\n\n  const [score, setScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [cardData, setCardData] = useState();\n  const [randomImgOne, setRandomImgOne] = useState('https://i.imgflip.com/1ur9b0.jpg');\n  const [randomImgTwo, setRandomImgTwo] = useState('https://i.imgflip.com/1g8my4.jpg');\n  const [idOne, setIdOne] = useState('2');\n  const [idTwo, setIdTwo] = useState('1');\n  const [cardArray, setCardArray] = useState([]);\n\n  useState(() => {\n    fetch(\"https://api.imgflip.com/get_memes\", {\n  })\n            .then(response => response.json())\n            .then(data => {\n                setCardData({data})\n            })\n  }, []);\n\n  function random() {\n    return Math.floor(Math.random() * (99 + 1));\n  }\n\n  function handleClick(event) {\n    const randomOne = random();\n    const randomTwo = random();\n    setRandomImgOne(cardData.data.data.memes[randomOne].url)\n    setRandomImgTwo(cardData.data.data.memes[randomTwo].url)\n    setIdOne(randomOne)\n    setIdTwo(randomTwo)\n    setScore(score + 1)\n    if (!cardArray.includes(event.target.id) || cardArray === []) {\n      setCardArray(cardArray.concat(event.target.id))\n    } else {\n      setCardArray([]);\n      setBestScore(score);\n      setScore(0);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Scoreboard \n        score={score}\n        bestScore={bestScore}\n      />\n      <div className=\"card-container\">\n        <Card\n          image={ randomImgOne }\n          onClick={ handleClick }\n          id={ idOne }\n        />\n        <Card\n          image={ randomImgTwo }\n          onClick={ handleClick }\n          id={ idTwo }\n        />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}